/**
 * NOTE: This class is auto generated by the swagger code generator program (2.4.0-SNAPSHOT).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package com.davidherron.pv_inverters_modules.api;

import com.davidherron.pv_inverters_modules.model.Inverter;
import io.swagger.annotations.*;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
@javax.annotation.Generated(value = "io.swagger.codegen.languages.SpringCodegen", date = "2019-05-23T10:48:04.857Z")

@Api(value = "inverters", description = "the inverters API")
public interface InvertersApi {

    @ApiOperation(value = "", nickname = "getInverters", notes = "Query the local PV Inverters database", response = Inverter.class, responseContainer = "List", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "OK", response = Inverter.class, responseContainer = "List"),
        @ApiResponse(code = 404, message = "NOT FOUND") })
    @RequestMapping(value = "/inverters",
        method = RequestMethod.GET)
    ResponseEntity<List<Inverter>> getInverters(@ApiParam(value = "Match manufacturer name") @Valid @RequestParam(value = "manufacturer", required = false) String manufacturer,@ApiParam(value = "Match manufacturer-assigned model number") @Valid @RequestParam(value = "model", required = false) String model,@ApiParam(value = "Minimum power continuous rating") @Valid @RequestParam(value = "minpower", required = false) Float minpower,@ApiParam(value = "Maximum power continuous rating") @Valid @RequestParam(value = "maxpower", required = false) Float maxpower,@ApiParam(value = "Minimum nominal voltage") @Valid @RequestParam(value = "minvoltage", required = false) Float minvoltage,@ApiParam(value = "Maximum nominal voltage") @Valid @RequestParam(value = "maxvoltage", required = false) Float maxvoltage,@ApiParam(value = "Has a built-in meter", allowableValues = "true, false") @Valid @RequestParam(value = "hasmeter", required = false) String hasmeter,@ApiParam(value = "Is a microinverter system", allowableValues = "true, false") @Valid @RequestParam(value = "microinverter", required = false) String microinverter);

}
