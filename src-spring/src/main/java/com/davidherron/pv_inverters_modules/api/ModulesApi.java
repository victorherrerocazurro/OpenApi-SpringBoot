/**
 * NOTE: This class is auto generated by the swagger code generator program (2.4.0-SNAPSHOT).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package com.davidherron.pv_inverters_modules.api;

import com.davidherron.pv_inverters_modules.model.Module;
import io.swagger.annotations.*;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
@javax.annotation.Generated(value = "io.swagger.codegen.languages.SpringCodegen", date = "2019-05-23T10:48:04.857Z")

@Api(value = "modules", description = "the modules API")
public interface ModulesApi {

    @ApiOperation(value = "", nickname = "getModules", notes = "Query the local PV Modules database", response = Module.class, responseContainer = "List", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "OK", response = Module.class, responseContainer = "List"),
        @ApiResponse(code = 404, message = "NOT FOUND") })
    @RequestMapping(value = "/modules",
        method = RequestMethod.GET)
    ResponseEntity<List<Module>> getModules(@ApiParam(value = "Match manufacturer name") @Valid @RequestParam(value = "manufacturer", required = false) String manufacturer,@ApiParam(value = "Match manufacturer-assigned model number") @Valid @RequestParam(value = "model", required = false) String model,@ApiParam(value = "Minimum of allowable Pmax range") @Valid @RequestParam(value = "minPmax", required = false) Float minPmax,@ApiParam(value = "Maximum of allowable Pmax range") @Valid @RequestParam(value = "maxPmax", required = false) Float maxPmax,@ApiParam(value = "Minimum of allowable Vpmax range") @Valid @RequestParam(value = "minVpmax", required = false) Float minVpmax,@ApiParam(value = "Maximum of allowable Vpmax range") @Valid @RequestParam(value = "maxVpmax", required = false) Float maxVpmax,@ApiParam(value = "Minimum of allowable Voc range") @Valid @RequestParam(value = "minVoc", required = false) Float minVoc,@ApiParam(value = "Maximum of allowable Voc range") @Valid @RequestParam(value = "maxVoc", required = false) Float maxVoc,@ApiParam(value = "Minimum of allowable Isx range") @Valid @RequestParam(value = "minIsc", required = false) Float minIsc,@ApiParam(value = "Maximum of allowable Isc range") @Valid @RequestParam(value = "maxIsc", required = false) Float maxIsc,@ApiParam(value = "Matches against the panel family", allowableValues = "monocrystalline, polycrystalline, thinfilm, cigsthin, hitsithin") @Valid @RequestParam(value = "family", required = false) String family,@ApiParam(value = "Matches against the panel technology", allowableValues = "monocsi, multicsi, thinfilm") @Valid @RequestParam(value = "technology", required = false) String technology);

}
